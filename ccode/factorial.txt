       int limit = graph_matrix->count;
   uint64_t factorial_array[limit];
   uint64_t combinatory_array[limit];
   printf("limit is %d\n", limit);
   printf("number is %" PRIu64 "\n", factorial(limit, factorial_array));
   uint64_t total_elemnts = 0;
   for (int i = 0; i<limit;i++){
      uint64_t n = factorial_array[limit-1];
      uint64_t n_minus_m = factorial_array[limit-2-i];
      if (n_minus_m == 0)
      {
         n_minus_m = 1;
      }
      uint64_t m = factorial_array[i];
      uint64_t value = 1;
      if (limit-1-i>0)
      {
         value = n/(n_minus_m*m);
      }
      total_elemnts += value;
      printf("%d!/(%d!*%d!)\n", limit,limit-i-1,i+1);
      printf("%" PRIu64 "/(%" PRIu64 "*%" PRIu64 ") = %" PRIu64" \n", n, n_minus_m, m, value);
   }
   printf("number is %" PRIu64 "\n", total_elemnts);